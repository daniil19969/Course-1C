
Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// регистр РегистрНачисления
	Движения.РегистрНачисления.Записывать = Истина;

	Движение = Движения.РегистрНачисления.Добавить();
	Движение.Сторно = Ложь;
	Движение.ВидРасчета = ПланыВидовРасчета.Начисления.ОкладПоТарифу;
	Движение.ПериодДействияНачало = НачалоМесяца(Дата);
	Движение.ПериодДействияКонец = КонецМесяца(Дата);
	Движение.ПериодРегистрации = Дата;
	Движение.Сотрудник = Сотрудник;
	Движение.РасчетныеДанные = Сумма;

	Движения.Записать();
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РегистрНачисленияДанныеГрафика.РасчетныеДанные КАК РасчетныеДанные,
		|	РегистрНачисленияДанныеГрафика.РабочийДеньПериодДействия КАК План,
		|	РегистрНачисленияДанныеГрафика.РабочийДеньФактическийПериодДействия КАК Факт
		|ИЗ
		|	РегистрРасчета.РегистрНачисления.ДанныеГрафика(Регистратор = &Ссылка) КАК РегистрНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Движение.Сумма = ВыборкаДетальныеЗаписи.РасчетныеДанные * ВыборкаДетальныеЗаписи.Факт;
		
		Движения.ДолгиПоЗарабатнойПлате.Записывать = Истина;
		Движение = Движения.ДолгиПоЗарабатнойПлате.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Сотрудник = Сотрудник;
		Движение.Сумма = ВыборкаДетальныеЗаписи.РасчетныеДанные * ВыборкаДетальныеЗаписи.Факт;
		
	КонецЕсли;
	Движения.РегистрНачисления.Записать();

	
КонецПроцедуры
