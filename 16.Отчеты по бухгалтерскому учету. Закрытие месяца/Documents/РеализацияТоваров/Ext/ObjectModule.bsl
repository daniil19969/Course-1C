
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		// Заполнение шапки
		Контрагент = ДанныеЗаполнения.Контрагент;
		Ответственный = ДанныеЗаполнения.Ответственный;
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.Сумма = ТекСтрокаТовары.Сумма;
			НоваяСтрока.Цена = ТекСтрокаТовары.Цена;
		КонецЦикла;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	//ДОМАШНЕЕ ЗАДАНИЕ №12
	//Обеспечьте контроль остатков для оперативно проводимых документов «Реализация товаров».
	//Также решите задачу расчета себестоимости при продаже товаров.
	//Для проверки результата введите ряд документов поступления и реализации.
	
	Движения.ОстаткиТоваров.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	Если Режим = РежимПроведенияДокумента.Оперативный Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиТоваровОстатки.Номенклатура КАК Номенклатура,
		|	ОстаткиТоваровОстатки.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваров.Остатки(
		|			,
		|			Номенклатура В
		|				(ВЫБРАТЬ
		|					РеализацияТоваровТовары.Номенклатура КАК Номенклатура
		|				ИЗ
		|					Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
		|				ГДЕ
		|					РеализацияТоваровТовары.Ссылка = &Ссылка)) КАК ОстаткиТоваровОстатки
		|ГДЕ
		|	ОстаткиТоваровОстатки.КоличествоОстаток < 0";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если Не РезультатЗапроса.Пустой() Тогда
			Отказ = Истина;
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Сообщить ("Не хватает "+ВыборкаДетальныеЗаписи.Номенклатура+" в количестве "+ВыборкаДетальныеЗаписи.Количество);		
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		Движения.Себестоимость.Записывать = Истина;
		Движения.Продажи.Записывать = Истина;
		
		
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СебестоимостьОстатки.Номенклатура КАК Номенклатура,
		|	СебестоимостьОстатки.СуммаОстаток КАК Сумма,
		|	СебестоимостьОстатки.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.Себестоимость.Остатки(
		|			&МоментВремени,
		|			Номенклатура В
		|				(ВЫБРАТЬ
		|					РеализацияТоваровТовары.Номенклатура КАК Номенклатура
		|				ИЗ
		|					Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
		|				ГДЕ
		|					РеализацияТоваровТовары.Ссылка = &Ссылка)) КАК СебестоимостьОстатки";
		
		Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		СуммаСебестоимости = 0;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Если ВыборкаДетальныеЗаписи.Количество<>0 Тогда
				СебестоимостьЕдиницы = ВыборкаДетальныеЗаписи.Сумма/ВыборкаДетальныеЗаписи.Количество;
			Иначе
				СебестоимостьЕдиницы = 0;
			КонецЕсли;
			
			
			Движение = Движения.Себестоимость.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			СтрокаТЧ = Товары.Найти(ВыборкаДетальныеЗаписи.Номенклатура, "Номенклатура");
			Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
			Движение.Количество = СтрокаТЧ.Количество;
			СебестоимостьСписания = СебестоимостьЕдиницы * СтрокаТЧ.Количество;
			Движение.Сумма = СебестоимостьСписания;
			
			Движение = Движения.Продажи.Добавить();
			Движение.Период = Дата;
			Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
			Движение.Контрагент = Контрагент;
			Движение.Количество = СтрокаТЧ.Количество;
			Движение.Сумма = СтрокаТЧ.Сумма;
			Движение.Себестоимость = СебестоимостьЕдиницы*СтрокаТЧ.Количество;
			
			СуммаСебестоимости = СуммаСебестоимости + СебестоимостьСписания;
		КонецЦикла;
	КонецЕсли;
	
	Движения.РегистрБухгалтерииПоБухУчету.Записывать = Истина;
	Движение = Движения.РегистрБухгалтерииПоБухУчету.Добавить();
	Движение.Период = Дата;
	Движение.СчетДт = ПланыСчетов.БухУчет.РасчетыСПокупателями;
	Движение.СчетКт = ПланыСчетов.БухУчет.Выручка;
	Движение.Сумма = СуммаДокумента;
	
	Движение = Движения.РегистрБухгалтерииПоБухУчету.Добавить();
	Движение.Период = Дата;
	Движение.СчетДт = ПланыСчетов.БухУчет.Себестоимость;
	Движение.СчетКт = ПланыСчетов.БухУчет.Товары;
	Движение.Сумма = СуммаСебестоимости;
	
КонецПроцедуры

//Задание 8
//При записи документа «Реализация товаров» сохраните общую сумму документа в реквизит «Сумма документа».
//Также необходимо выполнить проверку, что в документе «Реализация товаров» выбран контрагент, у которого указан флаг «Клиент».
//Подсказка 1. Для проверки корректности заполнения реквизитов используйте событие ОбработкаПроверкиЗаполнения.
//Подсказка 2. Чтобы получить значение реквизита обращайтесь через «точку». Например, Сообщить(Контрагент.ЭтоКлиент).

Процедура ПриЗаписи(Отказ)
	СуммаДокумента=0;
	Для каждого СтрокаТЧ ИЗ Товары Цикл
		СуммаДокумента = СуммаДокумента + СтрокаТЧ.Сумма;
	КонецЦикла;
	//СуммаДокумента = Товары.Итог("Сумма"); - упрощенный вариант из примера
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	//Если Контрагент.Клиент = Истина Тогда
	//	Отказ=Ложь;
	//	Сообщить("верно");
	//Иначе 
	//	Отказ = Истина;
	//	Сообщить("неверно");
	//КонецЕсли;
	//Правильно:
	Если НЕ Контрагент.Клиент Тогда
		Отказ=Истина;
		Сообщить("В документе должен быть выбран клиент!");
	КонецЕсли;
КонецПроцедуры



